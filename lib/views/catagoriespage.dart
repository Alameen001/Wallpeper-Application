import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:wallpaper_app/models/catagories_model.dart';
import 'package:wallpaper_app/models/wallpeper_model.dart';
import 'package:wallpaper_app/views/home.dart';
import 'package:http/http.dart' as http;
import 'package:wallpaper_app/views/image.dart';

class Catragorypage extends StatelessWidget {
  Catragorypage({Key? key, required this.index}) : super(key: key);

  int index;

  Future<List<Photos?>> getTrendWalpappers() async {
    final url = Uri.parse(
      'https://api.pexels.com/v1/search?per_page=500&query=${categories[index]}',
    );

    var response = await http.get(url, headers: {
      "Authorization": apiKey,
    });

    Autogenerated autogenerated =
        Autogenerated.fromJson(jsonDecode(response.body));

    return autogenerated.photos!;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.white,
        title: Text(
          categories[index],
          style: TextStyle(color: Colors.black),
        ),
        centerTitle: true,
        leading: IconButton(icon: Icon(Icons.arrow_back,color: Colors.black,),onPressed: (){
          Navigator.of(context).pop();
        },),
      ),
      body: FutureBuilder<List<Photos?>>(
        future: getTrendWalpappers(),
        builder: (BuildContext context, AsyncSnapshot<List<Photos?>> snapshot) {

          if(snapshot.connectionState == ConnectionState.waiting){
            return const Center(
              child: CircularProgressIndicator(),
            );
            
          }
          if(snapshot.hasError){
            return Center(
              child: Text("Somthing Went wrong!!"),
            );

          }
          List<Photos?> photos = snapshot.data!;
            return GridView.builder(
            itemCount: photos.length,
            gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
              crossAxisCount: 3,
              childAspectRatio: 3 / 5,
                mainAxisSpacing: 5 ,
                crossAxisSpacing: 5         
            ),
            itemBuilder: (context, index) {
              return GestureDetector(
                onTap: () {
                  Get.to(ImageView(imageviews: photos, initialindex: index));
                },
                child: Container(
                  decoration: BoxDecoration(
                    image: DecorationImage(
                        image: NetworkImage(photos[index]!.src!.large!),fit: BoxFit.cover, ),
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
              );
            },
          );
        
        },
      ),
    );
  }
}
